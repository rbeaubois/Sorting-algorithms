// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module count_occ_v2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        array_src_address0,
        array_src_ce0,
        array_src_q0,
        c1_address0,
        c1_ce0,
        c1_we0,
        c1_d0,
        c1_q0,
        c1_address1,
        c1_ce1,
        c1_we1,
        c1_d1,
        c1_q1,
        c2_address0,
        c2_ce0,
        c2_we0,
        c2_d0,
        c2_q0,
        c2_address1,
        c2_ce1,
        c2_we1,
        c2_d1,
        c2_q1,
        c3_address0,
        c3_ce0,
        c3_we0,
        c3_d0,
        c3_q0,
        c3_address1,
        c3_ce1,
        c3_we1,
        c3_d1,
        c3_q1,
        c4_address0,
        c4_ce0,
        c4_we0,
        c4_d0,
        c4_q0,
        c4_address1,
        c4_ce1,
        c4_we1,
        c4_d1,
        c4_q1
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_state12 = 21'd2048;
parameter    ap_ST_fsm_state13 = 21'd4096;
parameter    ap_ST_fsm_state14 = 21'd8192;
parameter    ap_ST_fsm_state15 = 21'd16384;
parameter    ap_ST_fsm_state16 = 21'd32768;
parameter    ap_ST_fsm_state17 = 21'd65536;
parameter    ap_ST_fsm_state18 = 21'd131072;
parameter    ap_ST_fsm_state19 = 21'd262144;
parameter    ap_ST_fsm_state20 = 21'd524288;
parameter    ap_ST_fsm_state21 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] array_src_address0;
output   array_src_ce0;
input  [31:0] array_src_q0;
output  [7:0] c1_address0;
output   c1_ce0;
output   c1_we0;
output  [31:0] c1_d0;
input  [31:0] c1_q0;
output  [7:0] c1_address1;
output   c1_ce1;
output   c1_we1;
output  [31:0] c1_d1;
input  [31:0] c1_q1;
output  [7:0] c2_address0;
output   c2_ce0;
output   c2_we0;
output  [31:0] c2_d0;
input  [31:0] c2_q0;
output  [7:0] c2_address1;
output   c2_ce1;
output   c2_we1;
output  [31:0] c2_d1;
input  [31:0] c2_q1;
output  [7:0] c3_address0;
output   c3_ce0;
output   c3_we0;
output  [31:0] c3_d0;
input  [31:0] c3_q0;
output  [7:0] c3_address1;
output   c3_ce1;
output   c3_we1;
output  [31:0] c3_d1;
input  [31:0] c3_q1;
output  [7:0] c4_address0;
output   c4_ce0;
output   c4_we0;
output  [31:0] c4_d0;
input  [31:0] c4_q0;
output  [7:0] c4_address1;
output   c4_ce1;
output   c4_we1;
output  [31:0] c4_d1;
input  [31:0] c4_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] array_src_address0;
reg array_src_ce0;
reg[7:0] c1_address0;
reg c1_ce0;
reg c1_we0;
reg[31:0] c1_d0;
reg[7:0] c1_address1;
reg c1_ce1;
reg c1_we1;
reg[31:0] c1_d1;
reg[7:0] c2_address0;
reg c2_ce0;
reg c2_we0;
reg[31:0] c2_d0;
reg[7:0] c2_address1;
reg c2_ce1;
reg c2_we1;
reg[31:0] c2_d1;
reg[7:0] c3_address0;
reg c3_ce0;
reg c3_we0;
reg[31:0] c3_d0;
reg[7:0] c3_address1;
reg c3_ce1;
reg c3_we1;
reg[31:0] c3_d1;
reg[7:0] c4_address0;
reg c4_ce0;
reg c4_we0;
reg[31:0] c4_d0;
reg[7:0] c4_address1;
reg c4_ce1;
reg c4_we1;
reg[31:0] c4_d1;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_472;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state17;
reg   [31:0] reg_476;
reg   [31:0] reg_480;
reg   [31:0] reg_484;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_516_p2;
wire   [15:0] tmp_20_fu_527_p1;
reg   [15:0] tmp_20_reg_838;
wire   [16:0] i_2_3_fu_531_p2;
reg   [16:0] i_2_3_reg_845;
reg   [7:0] c1_addr_4_reg_850;
wire    ap_CS_fsm_state3;
reg   [7:0] c2_addr_4_reg_855;
reg   [7:0] c3_addr_4_reg_860;
reg   [7:0] c4_addr_4_reg_865;
wire    ap_CS_fsm_state5;
reg   [7:0] c1_addr_5_reg_875;
wire    ap_CS_fsm_state6;
reg   [7:0] c2_addr_5_reg_880;
reg   [7:0] c3_addr_5_reg_885;
reg   [7:0] c4_addr_5_reg_890;
wire    ap_CS_fsm_state8;
reg   [7:0] c1_addr_6_reg_900;
wire    ap_CS_fsm_state9;
reg   [7:0] c2_addr_6_reg_905;
reg   [7:0] c3_addr_6_reg_910;
reg   [7:0] c4_addr_6_reg_915;
wire    ap_CS_fsm_state11;
reg   [7:0] c1_addr_7_reg_925;
wire    ap_CS_fsm_state12;
reg   [7:0] c2_addr_7_reg_930;
reg   [7:0] c3_addr_7_reg_935;
reg   [7:0] c4_addr_7_reg_940;
wire    ap_CS_fsm_state15;
reg   [7:0] c1_addr_1_reg_950;
reg   [7:0] c2_addr_1_reg_960;
reg   [7:0] c3_addr_1_reg_970;
reg   [7:0] c4_addr_1_reg_980;
wire   [31:0] tmp_15_fu_685_p2;
reg   [31:0] tmp_15_reg_985;
wire    ap_CS_fsm_state16;
wire   [31:0] tmp_16_fu_691_p2;
reg   [31:0] tmp_16_reg_991;
wire   [31:0] tmp_17_fu_697_p2;
reg   [31:0] tmp_17_reg_997;
wire   [31:0] tmp_18_fu_703_p2;
reg   [31:0] tmp_18_reg_1003;
reg   [7:0] c1_addr_2_reg_1009;
reg   [7:0] c2_addr_2_reg_1014;
reg   [7:0] c3_addr_2_reg_1019;
reg   [7:0] c4_addr_2_reg_1024;
reg   [7:0] c1_addr_3_reg_1029;
reg   [7:0] c2_addr_3_reg_1034;
reg   [7:0] c3_addr_3_reg_1039;
reg   [7:0] c4_addr_3_reg_1044;
wire   [31:0] tmp_23_1_fu_737_p2;
reg   [31:0] tmp_23_1_reg_1049;
wire   [31:0] tmp_24_1_fu_742_p2;
reg   [31:0] tmp_24_1_reg_1055;
wire   [31:0] tmp_25_1_fu_747_p2;
reg   [31:0] tmp_25_1_reg_1061;
wire   [31:0] tmp_26_1_fu_752_p2;
reg   [31:0] tmp_26_1_reg_1067;
wire   [31:0] tmp_23_2_fu_761_p2;
reg   [31:0] tmp_23_2_reg_1073;
wire    ap_CS_fsm_state18;
wire   [31:0] tmp_24_2_fu_767_p2;
reg   [31:0] tmp_24_2_reg_1078;
wire   [31:0] tmp_25_2_fu_773_p2;
reg   [31:0] tmp_25_2_reg_1083;
wire   [31:0] tmp_26_2_fu_779_p2;
reg   [31:0] tmp_26_2_reg_1088;
wire   [8:0] i_3_2_fu_785_p2;
reg   [8:0] i_3_2_reg_1093;
wire   [7:0] i_3_3_fu_797_p2;
reg   [7:0] i_3_3_reg_1101;
wire   [0:0] exitcond_3_fu_791_p2;
reg   [7:0] c1_addr_8_reg_1106;
wire    ap_CS_fsm_state19;
reg   [7:0] c2_addr_8_reg_1111;
reg   [7:0] c3_addr_8_reg_1116;
reg   [7:0] c4_addr_8_reg_1121;
wire   [31:0] tmp_23_3_fu_810_p2;
reg   [31:0] tmp_23_3_reg_1126;
wire    ap_CS_fsm_state20;
wire   [31:0] tmp_24_3_fu_815_p2;
reg   [31:0] tmp_24_3_reg_1131;
wire   [31:0] tmp_25_3_fu_820_p2;
reg   [31:0] tmp_25_3_reg_1136;
wire   [31:0] tmp_26_3_fu_825_p2;
reg   [31:0] tmp_26_3_reg_1141;
reg   [16:0] i_reg_419;
wire    ap_CS_fsm_state14;
reg   [7:0] i_1_reg_430;
wire    ap_CS_fsm_state21;
wire   [63:0] tmp_fu_522_p1;
wire   [63:0] tmp_7_fu_541_p1;
wire   [63:0] tmp_5_fu_546_p1;
wire   [63:0] tmp_4_fu_551_p1;
wire   [63:0] tmp_10_fu_556_p1;
wire   [63:0] tmp_1_fu_566_p1;
wire   [63:0] tmp_7_1_fu_575_p1;
wire   [63:0] tmp_11_1_fu_580_p1;
wire   [63:0] tmp_15_1_fu_585_p1;
wire   [63:0] tmp_18_1_fu_590_p1;
wire   [63:0] tmp_2_fu_600_p1;
wire   [63:0] tmp_7_2_fu_609_p1;
wire   [63:0] tmp_11_2_fu_614_p1;
wire   [63:0] tmp_15_2_fu_619_p1;
wire   [63:0] tmp_18_2_fu_624_p1;
wire   [63:0] tmp_3_fu_634_p1;
wire   [63:0] tmp_7_3_fu_643_p1;
wire   [63:0] tmp_11_3_fu_648_p1;
wire   [63:0] tmp_15_3_fu_653_p1;
wire   [63:0] tmp_18_3_fu_658_p1;
wire   [63:0] tmp_13_fu_669_p1;
wire   [63:0] tmp_14_fu_677_p1;
wire   [63:0] tmp_22_1_fu_715_p1;
wire   [63:0] tmp_22_2_fu_729_p1;
wire   [63:0] tmp_22_3_fu_803_p1;
wire   [31:0] grp_fu_488_p2;
wire   [31:0] grp_fu_495_p2;
wire   [31:0] grp_fu_502_p2;
wire   [31:0] grp_fu_509_p2;
wire   [7:0] tmp_19_fu_537_p1;
wire   [7:0] grp_fu_442_p4;
wire   [7:0] grp_fu_452_p4;
wire   [7:0] grp_fu_462_p4;
wire   [15:0] i_2_s_fu_561_p2;
wire   [7:0] tmp_21_fu_571_p1;
wire   [15:0] i_2_1_fu_595_p2;
wire   [7:0] tmp_22_fu_605_p1;
wire   [15:0] i_2_2_fu_629_p2;
wire   [7:0] tmp_23_fu_639_p1;
wire   [7:0] tmp_12_fu_663_p2;
wire   [7:0] i_3_fu_709_p2;
wire   [7:0] i_3_1_fu_723_p2;
wire   [8:0] i_1_cast2_fu_757_p1;
reg   [20:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_516_p2 == 1'd1))) begin
        i_1_reg_430 <= 8'd1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_1_reg_430 <= i_3_3_reg_1101;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_reg_419 <= i_2_3_reg_845;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_419 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        c1_addr_1_reg_950 <= tmp_14_fu_677_p1;
        c2_addr_1_reg_960 <= tmp_14_fu_677_p1;
        c3_addr_1_reg_970 <= tmp_14_fu_677_p1;
        c4_addr_1_reg_980 <= tmp_14_fu_677_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        c1_addr_2_reg_1009 <= tmp_22_1_fu_715_p1;
        c1_addr_3_reg_1029 <= tmp_22_2_fu_729_p1;
        c2_addr_2_reg_1014 <= tmp_22_1_fu_715_p1;
        c2_addr_3_reg_1034 <= tmp_22_2_fu_729_p1;
        c3_addr_2_reg_1019 <= tmp_22_1_fu_715_p1;
        c3_addr_3_reg_1039 <= tmp_22_2_fu_729_p1;
        c4_addr_2_reg_1024 <= tmp_22_1_fu_715_p1;
        c4_addr_3_reg_1044 <= tmp_22_2_fu_729_p1;
        tmp_15_reg_985 <= tmp_15_fu_685_p2;
        tmp_16_reg_991 <= tmp_16_fu_691_p2;
        tmp_17_reg_997 <= tmp_17_fu_697_p2;
        tmp_18_reg_1003 <= tmp_18_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c1_addr_4_reg_850 <= tmp_7_fu_541_p1;
        c2_addr_4_reg_855 <= tmp_5_fu_546_p1;
        c3_addr_4_reg_860 <= tmp_4_fu_551_p1;
        c4_addr_4_reg_865 <= tmp_10_fu_556_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        c1_addr_5_reg_875 <= tmp_7_1_fu_575_p1;
        c2_addr_5_reg_880 <= tmp_11_1_fu_580_p1;
        c3_addr_5_reg_885 <= tmp_15_1_fu_585_p1;
        c4_addr_5_reg_890 <= tmp_18_1_fu_590_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        c1_addr_6_reg_900 <= tmp_7_2_fu_609_p1;
        c2_addr_6_reg_905 <= tmp_11_2_fu_614_p1;
        c3_addr_6_reg_910 <= tmp_15_2_fu_619_p1;
        c4_addr_6_reg_915 <= tmp_18_2_fu_624_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c1_addr_7_reg_925 <= tmp_7_3_fu_643_p1;
        c2_addr_7_reg_930 <= tmp_11_3_fu_648_p1;
        c3_addr_7_reg_935 <= tmp_15_3_fu_653_p1;
        c4_addr_7_reg_940 <= tmp_18_3_fu_658_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        c1_addr_8_reg_1106 <= tmp_22_3_fu_803_p1;
        c2_addr_8_reg_1111 <= tmp_22_3_fu_803_p1;
        c3_addr_8_reg_1116 <= tmp_22_3_fu_803_p1;
        c4_addr_8_reg_1121 <= tmp_22_3_fu_803_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_516_p2 == 1'd0))) begin
        i_2_3_reg_845 <= i_2_3_fu_531_p2;
        tmp_20_reg_838 <= tmp_20_fu_527_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_3_2_reg_1093 <= i_3_2_fu_785_p2;
        tmp_23_2_reg_1073 <= tmp_23_2_fu_761_p2;
        tmp_24_2_reg_1078 <= tmp_24_2_fu_767_p2;
        tmp_25_2_reg_1083 <= tmp_25_2_fu_773_p2;
        tmp_26_2_reg_1088 <= tmp_26_2_fu_779_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_3_fu_791_p2 == 1'd0))) begin
        i_3_3_reg_1101 <= i_3_3_fu_797_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_472 <= c1_q0;
        reg_476 <= c2_q0;
        reg_480 <= c3_q0;
        reg_484 <= c4_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_23_1_reg_1049 <= tmp_23_1_fu_737_p2;
        tmp_24_1_reg_1055 <= tmp_24_1_fu_742_p2;
        tmp_25_1_reg_1061 <= tmp_25_1_fu_747_p2;
        tmp_26_1_reg_1067 <= tmp_26_1_fu_752_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_23_3_reg_1126 <= tmp_23_3_fu_810_p2;
        tmp_24_3_reg_1131 <= tmp_24_3_fu_815_p2;
        tmp_25_3_reg_1136 <= tmp_25_3_fu_820_p2;
        tmp_26_3_reg_1141 <= tmp_26_3_fu_825_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond_3_fu_791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_3_fu_791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        array_src_address0 = tmp_3_fu_634_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        array_src_address0 = tmp_2_fu_600_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        array_src_address0 = tmp_1_fu_566_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        array_src_address0 = tmp_fu_522_p1;
    end else begin
        array_src_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        array_src_ce0 = 1'b1;
    end else begin
        array_src_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c1_address0 = c1_addr_3_reg_1029;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        c1_address0 = tmp_22_2_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        c1_address0 = tmp_13_fu_669_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        c1_address0 = c1_addr_7_reg_925;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c1_address0 = tmp_7_3_fu_643_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        c1_address0 = c1_addr_6_reg_900;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        c1_address0 = tmp_7_2_fu_609_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        c1_address0 = c1_addr_5_reg_875;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        c1_address0 = tmp_7_1_fu_575_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c1_address0 = c1_addr_4_reg_850;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        c1_address0 = tmp_7_fu_541_p1;
    end else begin
        c1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c1_address1 = c1_addr_8_reg_1106;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c1_address1 = tmp_22_3_fu_803_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c1_address1 = c1_addr_2_reg_1009;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c1_address1 = c1_addr_1_reg_950;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        c1_address1 = tmp_22_1_fu_715_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        c1_address1 = tmp_14_fu_677_p1;
    end else begin
        c1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        c1_ce0 = 1'b1;
    end else begin
        c1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17))) begin
        c1_ce1 = 1'b1;
    end else begin
        c1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c1_d0 = tmp_23_2_fu_761_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        c1_d0 = grp_fu_488_p2;
    end else begin
        c1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c1_d1 = tmp_23_3_reg_1126;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c1_d1 = tmp_23_1_reg_1049;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c1_d1 = tmp_15_reg_985;
    end else begin
        c1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        c1_we0 = 1'b1;
    end else begin
        c1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        c1_we1 = 1'b1;
    end else begin
        c1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c2_address0 = c2_addr_3_reg_1034;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        c2_address0 = tmp_22_2_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        c2_address0 = tmp_13_fu_669_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        c2_address0 = c2_addr_7_reg_930;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c2_address0 = tmp_11_3_fu_648_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        c2_address0 = c2_addr_6_reg_905;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        c2_address0 = tmp_11_2_fu_614_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        c2_address0 = c2_addr_5_reg_880;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        c2_address0 = tmp_11_1_fu_580_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c2_address0 = c2_addr_4_reg_855;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        c2_address0 = tmp_5_fu_546_p1;
    end else begin
        c2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c2_address1 = c2_addr_8_reg_1111;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c2_address1 = tmp_22_3_fu_803_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c2_address1 = c2_addr_2_reg_1014;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c2_address1 = c2_addr_1_reg_960;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        c2_address1 = tmp_22_1_fu_715_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        c2_address1 = tmp_14_fu_677_p1;
    end else begin
        c2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        c2_ce0 = 1'b1;
    end else begin
        c2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17))) begin
        c2_ce1 = 1'b1;
    end else begin
        c2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c2_d0 = tmp_24_2_fu_767_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        c2_d0 = grp_fu_495_p2;
    end else begin
        c2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c2_d1 = tmp_24_3_reg_1131;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c2_d1 = tmp_24_1_reg_1055;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c2_d1 = tmp_16_reg_991;
    end else begin
        c2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        c2_we0 = 1'b1;
    end else begin
        c2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        c2_we1 = 1'b1;
    end else begin
        c2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c3_address0 = c3_addr_3_reg_1039;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        c3_address0 = tmp_22_2_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        c3_address0 = tmp_13_fu_669_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        c3_address0 = c3_addr_7_reg_935;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c3_address0 = tmp_15_3_fu_653_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        c3_address0 = c3_addr_6_reg_910;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        c3_address0 = tmp_15_2_fu_619_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        c3_address0 = c3_addr_5_reg_885;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        c3_address0 = tmp_15_1_fu_585_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c3_address0 = c3_addr_4_reg_860;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        c3_address0 = tmp_4_fu_551_p1;
    end else begin
        c3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c3_address1 = c3_addr_8_reg_1116;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c3_address1 = tmp_22_3_fu_803_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c3_address1 = c3_addr_2_reg_1019;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c3_address1 = c3_addr_1_reg_970;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        c3_address1 = tmp_22_1_fu_715_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        c3_address1 = tmp_14_fu_677_p1;
    end else begin
        c3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        c3_ce0 = 1'b1;
    end else begin
        c3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17))) begin
        c3_ce1 = 1'b1;
    end else begin
        c3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c3_d0 = tmp_25_2_fu_773_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        c3_d0 = grp_fu_502_p2;
    end else begin
        c3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c3_d1 = tmp_25_3_reg_1136;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c3_d1 = tmp_25_1_reg_1061;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c3_d1 = tmp_17_reg_997;
    end else begin
        c3_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        c3_we0 = 1'b1;
    end else begin
        c3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        c3_we1 = 1'b1;
    end else begin
        c3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c4_address0 = c4_addr_3_reg_1044;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        c4_address0 = tmp_22_2_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        c4_address0 = tmp_13_fu_669_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        c4_address0 = c4_addr_7_reg_940;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c4_address0 = tmp_18_3_fu_658_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        c4_address0 = c4_addr_6_reg_915;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        c4_address0 = tmp_18_2_fu_624_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        c4_address0 = c4_addr_5_reg_890;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        c4_address0 = tmp_18_1_fu_590_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c4_address0 = c4_addr_4_reg_865;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        c4_address0 = tmp_10_fu_556_p1;
    end else begin
        c4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c4_address1 = c4_addr_8_reg_1121;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c4_address1 = tmp_22_3_fu_803_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c4_address1 = c4_addr_2_reg_1024;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c4_address1 = c4_addr_1_reg_980;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        c4_address1 = tmp_22_1_fu_715_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        c4_address1 = tmp_14_fu_677_p1;
    end else begin
        c4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        c4_ce0 = 1'b1;
    end else begin
        c4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state17))) begin
        c4_ce1 = 1'b1;
    end else begin
        c4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c4_d0 = tmp_26_2_fu_779_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        c4_d0 = grp_fu_509_p2;
    end else begin
        c4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        c4_d1 = tmp_26_3_reg_1141;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        c4_d1 = tmp_26_1_reg_1067;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        c4_d1 = tmp_18_reg_1003;
    end else begin
        c4_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        c4_we0 = 1'b1;
    end else begin
        c4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        c4_we1 = 1'b1;
    end else begin
        c4_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_516_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((exitcond_3_fu_791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond1_fu_516_p2 = ((i_reg_419 == 17'd65536) ? 1'b1 : 1'b0);

assign exitcond_3_fu_791_p2 = ((i_3_2_fu_785_p2 == 9'd256) ? 1'b1 : 1'b0);

assign grp_fu_442_p4 = {{array_src_q0[15:8]}};

assign grp_fu_452_p4 = {{array_src_q0[23:16]}};

assign grp_fu_462_p4 = {{array_src_q0[31:24]}};

assign grp_fu_488_p2 = (32'd1 + reg_472);

assign grp_fu_495_p2 = (32'd1 + reg_476);

assign grp_fu_502_p2 = (32'd1 + reg_480);

assign grp_fu_509_p2 = (32'd1 + reg_484);

assign i_1_cast2_fu_757_p1 = i_1_reg_430;

assign i_2_1_fu_595_p2 = (tmp_20_reg_838 | 16'd2);

assign i_2_2_fu_629_p2 = (tmp_20_reg_838 | 16'd3);

assign i_2_3_fu_531_p2 = (17'd4 + i_reg_419);

assign i_2_s_fu_561_p2 = (tmp_20_reg_838 | 16'd1);

assign i_3_1_fu_723_p2 = (i_1_reg_430 + 8'd2);

assign i_3_2_fu_785_p2 = (i_1_cast2_fu_757_p1 + 9'd3);

assign i_3_3_fu_797_p2 = (i_1_reg_430 + 8'd4);

assign i_3_fu_709_p2 = (i_1_reg_430 + 8'd1);

assign tmp_10_fu_556_p1 = grp_fu_462_p4;

assign tmp_11_1_fu_580_p1 = grp_fu_442_p4;

assign tmp_11_2_fu_614_p1 = grp_fu_442_p4;

assign tmp_11_3_fu_648_p1 = grp_fu_442_p4;

assign tmp_12_fu_663_p2 = ($signed(i_1_reg_430) + $signed(8'd255));

assign tmp_13_fu_669_p1 = tmp_12_fu_663_p2;

assign tmp_14_fu_677_p1 = i_1_reg_430;

assign tmp_15_1_fu_585_p1 = grp_fu_452_p4;

assign tmp_15_2_fu_619_p1 = grp_fu_452_p4;

assign tmp_15_3_fu_653_p1 = grp_fu_452_p4;

assign tmp_15_fu_685_p2 = (c1_q1 + c1_q0);

assign tmp_16_fu_691_p2 = (c2_q1 + c2_q0);

assign tmp_17_fu_697_p2 = (c3_q1 + c3_q0);

assign tmp_18_1_fu_590_p1 = grp_fu_462_p4;

assign tmp_18_2_fu_624_p1 = grp_fu_462_p4;

assign tmp_18_3_fu_658_p1 = grp_fu_462_p4;

assign tmp_18_fu_703_p2 = (c4_q1 + c4_q0);

assign tmp_19_fu_537_p1 = array_src_q0[7:0];

assign tmp_1_fu_566_p1 = i_2_s_fu_561_p2;

assign tmp_20_fu_527_p1 = i_reg_419[15:0];

assign tmp_21_fu_571_p1 = array_src_q0[7:0];

assign tmp_22_1_fu_715_p1 = i_3_fu_709_p2;

assign tmp_22_2_fu_729_p1 = i_3_1_fu_723_p2;

assign tmp_22_3_fu_803_p1 = i_3_2_reg_1093;

assign tmp_22_fu_605_p1 = array_src_q0[7:0];

assign tmp_23_1_fu_737_p2 = (c1_q1 + tmp_15_reg_985);

assign tmp_23_2_fu_761_p2 = (reg_472 + tmp_23_1_reg_1049);

assign tmp_23_3_fu_810_p2 = (c1_q1 + tmp_23_2_reg_1073);

assign tmp_23_fu_639_p1 = array_src_q0[7:0];

assign tmp_24_1_fu_742_p2 = (c2_q1 + tmp_16_reg_991);

assign tmp_24_2_fu_767_p2 = (reg_476 + tmp_24_1_reg_1055);

assign tmp_24_3_fu_815_p2 = (c2_q1 + tmp_24_2_reg_1078);

assign tmp_25_1_fu_747_p2 = (c3_q1 + tmp_17_reg_997);

assign tmp_25_2_fu_773_p2 = (reg_480 + tmp_25_1_reg_1061);

assign tmp_25_3_fu_820_p2 = (c3_q1 + tmp_25_2_reg_1083);

assign tmp_26_1_fu_752_p2 = (c4_q1 + tmp_18_reg_1003);

assign tmp_26_2_fu_779_p2 = (reg_484 + tmp_26_1_reg_1067);

assign tmp_26_3_fu_825_p2 = (c4_q1 + tmp_26_2_reg_1088);

assign tmp_2_fu_600_p1 = i_2_1_fu_595_p2;

assign tmp_3_fu_634_p1 = i_2_2_fu_629_p2;

assign tmp_4_fu_551_p1 = grp_fu_452_p4;

assign tmp_5_fu_546_p1 = grp_fu_442_p4;

assign tmp_7_1_fu_575_p1 = tmp_21_fu_571_p1;

assign tmp_7_2_fu_609_p1 = tmp_22_fu_605_p1;

assign tmp_7_3_fu_643_p1 = tmp_23_fu_639_p1;

assign tmp_7_fu_541_p1 = tmp_19_fu_537_p1;

assign tmp_fu_522_p1 = i_reg_419;

endmodule //count_occ_v2
