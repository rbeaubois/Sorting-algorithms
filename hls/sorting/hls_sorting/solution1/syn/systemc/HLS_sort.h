// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _HLS_sort_HH_
#define _HLS_sort_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "count_occ_v2.h"
#include "sort_occ_v2.h"
#include "HLS_sort_array2.h"
#include "HLS_sort_count_1.h"

namespace ap_rtl {

struct HLS_sort : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > S_AXIS_TDATA;
    sc_in< sc_logic > S_AXIS_TVALID;
    sc_out< sc_logic > S_AXIS_TREADY;
    sc_in< sc_lv<4> > S_AXIS_TKEEP;
    sc_in< sc_lv<4> > S_AXIS_TSTRB;
    sc_in< sc_lv<1> > S_AXIS_TUSER;
    sc_in< sc_lv<1> > S_AXIS_TLAST;
    sc_in< sc_lv<1> > S_AXIS_TID;
    sc_in< sc_lv<1> > S_AXIS_TDEST;
    sc_out< sc_lv<32> > M_AXIS_TDATA;
    sc_out< sc_logic > M_AXIS_TVALID;
    sc_in< sc_logic > M_AXIS_TREADY;
    sc_out< sc_lv<4> > M_AXIS_TKEEP;
    sc_out< sc_lv<4> > M_AXIS_TSTRB;
    sc_out< sc_lv<1> > M_AXIS_TUSER;
    sc_out< sc_lv<1> > M_AXIS_TLAST;
    sc_out< sc_lv<1> > M_AXIS_TID;
    sc_out< sc_lv<1> > M_AXIS_TDEST;


    // Module declarations
    HLS_sort(sc_module_name name);
    SC_HAS_PROCESS(HLS_sort);

    ~HLS_sort();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    HLS_sort_array2* array2_U;
    HLS_sort_count_1* count_1_U;
    HLS_sort_count_1* count_2_U;
    HLS_sort_count_1* count_3_U;
    HLS_sort_count_1* count_4_U;
    HLS_sort_array2* tab_U;
    count_occ_v2* grp_count_occ_v2_fu_366;
    sort_occ_v2* grp_sort_occ_v2_fu_375;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > S_AXIS_V_data_V_0_data_out;
    sc_signal< sc_logic > S_AXIS_V_data_V_0_vld_in;
    sc_signal< sc_logic > S_AXIS_V_data_V_0_vld_out;
    sc_signal< sc_logic > S_AXIS_V_data_V_0_ack_in;
    sc_signal< sc_logic > S_AXIS_V_data_V_0_ack_out;
    sc_signal< sc_lv<32> > S_AXIS_V_data_V_0_payload_A;
    sc_signal< sc_lv<32> > S_AXIS_V_data_V_0_payload_B;
    sc_signal< sc_logic > S_AXIS_V_data_V_0_sel_rd;
    sc_signal< sc_logic > S_AXIS_V_data_V_0_sel_wr;
    sc_signal< sc_logic > S_AXIS_V_data_V_0_sel;
    sc_signal< sc_logic > S_AXIS_V_data_V_0_load_A;
    sc_signal< sc_logic > S_AXIS_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > S_AXIS_V_data_V_0_state;
    sc_signal< sc_logic > S_AXIS_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > S_AXIS_V_keep_V_0_data_out;
    sc_signal< sc_logic > S_AXIS_V_keep_V_0_vld_in;
    sc_signal< sc_logic > S_AXIS_V_keep_V_0_vld_out;
    sc_signal< sc_logic > S_AXIS_V_keep_V_0_ack_in;
    sc_signal< sc_logic > S_AXIS_V_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > S_AXIS_V_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > S_AXIS_V_keep_V_0_payload_B;
    sc_signal< sc_logic > S_AXIS_V_keep_V_0_sel_rd;
    sc_signal< sc_logic > S_AXIS_V_keep_V_0_sel_wr;
    sc_signal< sc_logic > S_AXIS_V_keep_V_0_sel;
    sc_signal< sc_logic > S_AXIS_V_keep_V_0_load_A;
    sc_signal< sc_logic > S_AXIS_V_keep_V_0_load_B;
    sc_signal< sc_lv<2> > S_AXIS_V_keep_V_0_state;
    sc_signal< sc_logic > S_AXIS_V_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > S_AXIS_V_strb_V_0_data_out;
    sc_signal< sc_logic > S_AXIS_V_strb_V_0_vld_in;
    sc_signal< sc_logic > S_AXIS_V_strb_V_0_vld_out;
    sc_signal< sc_logic > S_AXIS_V_strb_V_0_ack_in;
    sc_signal< sc_logic > S_AXIS_V_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > S_AXIS_V_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > S_AXIS_V_strb_V_0_payload_B;
    sc_signal< sc_logic > S_AXIS_V_strb_V_0_sel_rd;
    sc_signal< sc_logic > S_AXIS_V_strb_V_0_sel_wr;
    sc_signal< sc_logic > S_AXIS_V_strb_V_0_sel;
    sc_signal< sc_logic > S_AXIS_V_strb_V_0_load_A;
    sc_signal< sc_logic > S_AXIS_V_strb_V_0_load_B;
    sc_signal< sc_lv<2> > S_AXIS_V_strb_V_0_state;
    sc_signal< sc_logic > S_AXIS_V_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > S_AXIS_V_user_V_0_data_out;
    sc_signal< sc_logic > S_AXIS_V_user_V_0_vld_in;
    sc_signal< sc_logic > S_AXIS_V_user_V_0_vld_out;
    sc_signal< sc_logic > S_AXIS_V_user_V_0_ack_in;
    sc_signal< sc_logic > S_AXIS_V_user_V_0_ack_out;
    sc_signal< sc_lv<1> > S_AXIS_V_user_V_0_payload_A;
    sc_signal< sc_lv<1> > S_AXIS_V_user_V_0_payload_B;
    sc_signal< sc_logic > S_AXIS_V_user_V_0_sel_rd;
    sc_signal< sc_logic > S_AXIS_V_user_V_0_sel_wr;
    sc_signal< sc_logic > S_AXIS_V_user_V_0_sel;
    sc_signal< sc_logic > S_AXIS_V_user_V_0_load_A;
    sc_signal< sc_logic > S_AXIS_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > S_AXIS_V_user_V_0_state;
    sc_signal< sc_logic > S_AXIS_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > S_AXIS_V_id_V_0_data_out;
    sc_signal< sc_logic > S_AXIS_V_id_V_0_vld_in;
    sc_signal< sc_logic > S_AXIS_V_id_V_0_vld_out;
    sc_signal< sc_logic > S_AXIS_V_id_V_0_ack_in;
    sc_signal< sc_logic > S_AXIS_V_id_V_0_ack_out;
    sc_signal< sc_lv<1> > S_AXIS_V_id_V_0_payload_A;
    sc_signal< sc_lv<1> > S_AXIS_V_id_V_0_payload_B;
    sc_signal< sc_logic > S_AXIS_V_id_V_0_sel_rd;
    sc_signal< sc_logic > S_AXIS_V_id_V_0_sel_wr;
    sc_signal< sc_logic > S_AXIS_V_id_V_0_sel;
    sc_signal< sc_logic > S_AXIS_V_id_V_0_load_A;
    sc_signal< sc_logic > S_AXIS_V_id_V_0_load_B;
    sc_signal< sc_lv<2> > S_AXIS_V_id_V_0_state;
    sc_signal< sc_logic > S_AXIS_V_id_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > S_AXIS_V_dest_V_0_data_out;
    sc_signal< sc_logic > S_AXIS_V_dest_V_0_vld_in;
    sc_signal< sc_logic > S_AXIS_V_dest_V_0_vld_out;
    sc_signal< sc_logic > S_AXIS_V_dest_V_0_ack_in;
    sc_signal< sc_logic > S_AXIS_V_dest_V_0_ack_out;
    sc_signal< sc_lv<1> > S_AXIS_V_dest_V_0_payload_A;
    sc_signal< sc_lv<1> > S_AXIS_V_dest_V_0_payload_B;
    sc_signal< sc_logic > S_AXIS_V_dest_V_0_sel_rd;
    sc_signal< sc_logic > S_AXIS_V_dest_V_0_sel_wr;
    sc_signal< sc_logic > S_AXIS_V_dest_V_0_sel;
    sc_signal< sc_logic > S_AXIS_V_dest_V_0_load_A;
    sc_signal< sc_logic > S_AXIS_V_dest_V_0_load_B;
    sc_signal< sc_lv<2> > S_AXIS_V_dest_V_0_state;
    sc_signal< sc_logic > S_AXIS_V_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > M_AXIS_V_data_V_1_data_out;
    sc_signal< sc_logic > M_AXIS_V_data_V_1_vld_in;
    sc_signal< sc_logic > M_AXIS_V_data_V_1_vld_out;
    sc_signal< sc_logic > M_AXIS_V_data_V_1_ack_in;
    sc_signal< sc_logic > M_AXIS_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > M_AXIS_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > M_AXIS_V_data_V_1_payload_B;
    sc_signal< sc_logic > M_AXIS_V_data_V_1_sel_rd;
    sc_signal< sc_logic > M_AXIS_V_data_V_1_sel_wr;
    sc_signal< sc_logic > M_AXIS_V_data_V_1_sel;
    sc_signal< sc_logic > M_AXIS_V_data_V_1_load_A;
    sc_signal< sc_logic > M_AXIS_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > M_AXIS_V_data_V_1_state;
    sc_signal< sc_logic > M_AXIS_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > M_AXIS_V_keep_V_1_data_out;
    sc_signal< sc_logic > M_AXIS_V_keep_V_1_vld_in;
    sc_signal< sc_logic > M_AXIS_V_keep_V_1_vld_out;
    sc_signal< sc_logic > M_AXIS_V_keep_V_1_ack_in;
    sc_signal< sc_logic > M_AXIS_V_keep_V_1_ack_out;
    sc_signal< sc_lv<4> > M_AXIS_V_keep_V_1_payload_A;
    sc_signal< sc_lv<4> > M_AXIS_V_keep_V_1_payload_B;
    sc_signal< sc_logic > M_AXIS_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > M_AXIS_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > M_AXIS_V_keep_V_1_sel;
    sc_signal< sc_logic > M_AXIS_V_keep_V_1_load_A;
    sc_signal< sc_logic > M_AXIS_V_keep_V_1_load_B;
    sc_signal< sc_lv<2> > M_AXIS_V_keep_V_1_state;
    sc_signal< sc_logic > M_AXIS_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > M_AXIS_V_strb_V_1_data_out;
    sc_signal< sc_logic > M_AXIS_V_strb_V_1_vld_in;
    sc_signal< sc_logic > M_AXIS_V_strb_V_1_vld_out;
    sc_signal< sc_logic > M_AXIS_V_strb_V_1_ack_in;
    sc_signal< sc_logic > M_AXIS_V_strb_V_1_ack_out;
    sc_signal< sc_lv<4> > M_AXIS_V_strb_V_1_payload_A;
    sc_signal< sc_lv<4> > M_AXIS_V_strb_V_1_payload_B;
    sc_signal< sc_logic > M_AXIS_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > M_AXIS_V_strb_V_1_sel_wr;
    sc_signal< sc_logic > M_AXIS_V_strb_V_1_sel;
    sc_signal< sc_logic > M_AXIS_V_strb_V_1_load_A;
    sc_signal< sc_logic > M_AXIS_V_strb_V_1_load_B;
    sc_signal< sc_lv<2> > M_AXIS_V_strb_V_1_state;
    sc_signal< sc_logic > M_AXIS_V_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > M_AXIS_V_user_V_1_data_out;
    sc_signal< sc_logic > M_AXIS_V_user_V_1_vld_in;
    sc_signal< sc_logic > M_AXIS_V_user_V_1_vld_out;
    sc_signal< sc_logic > M_AXIS_V_user_V_1_ack_in;
    sc_signal< sc_logic > M_AXIS_V_user_V_1_ack_out;
    sc_signal< sc_lv<1> > M_AXIS_V_user_V_1_payload_A;
    sc_signal< sc_lv<1> > M_AXIS_V_user_V_1_payload_B;
    sc_signal< sc_logic > M_AXIS_V_user_V_1_sel_rd;
    sc_signal< sc_logic > M_AXIS_V_user_V_1_sel_wr;
    sc_signal< sc_logic > M_AXIS_V_user_V_1_sel;
    sc_signal< sc_logic > M_AXIS_V_user_V_1_load_A;
    sc_signal< sc_logic > M_AXIS_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > M_AXIS_V_user_V_1_state;
    sc_signal< sc_logic > M_AXIS_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > M_AXIS_V_last_V_1_data_out;
    sc_signal< sc_logic > M_AXIS_V_last_V_1_vld_in;
    sc_signal< sc_logic > M_AXIS_V_last_V_1_vld_out;
    sc_signal< sc_logic > M_AXIS_V_last_V_1_ack_in;
    sc_signal< sc_logic > M_AXIS_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > M_AXIS_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > M_AXIS_V_last_V_1_payload_B;
    sc_signal< sc_logic > M_AXIS_V_last_V_1_sel_rd;
    sc_signal< sc_logic > M_AXIS_V_last_V_1_sel_wr;
    sc_signal< sc_logic > M_AXIS_V_last_V_1_sel;
    sc_signal< sc_logic > M_AXIS_V_last_V_1_load_A;
    sc_signal< sc_logic > M_AXIS_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > M_AXIS_V_last_V_1_state;
    sc_signal< sc_logic > M_AXIS_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > M_AXIS_V_id_V_1_data_out;
    sc_signal< sc_logic > M_AXIS_V_id_V_1_vld_in;
    sc_signal< sc_logic > M_AXIS_V_id_V_1_vld_out;
    sc_signal< sc_logic > M_AXIS_V_id_V_1_ack_in;
    sc_signal< sc_logic > M_AXIS_V_id_V_1_ack_out;
    sc_signal< sc_lv<1> > M_AXIS_V_id_V_1_payload_A;
    sc_signal< sc_lv<1> > M_AXIS_V_id_V_1_payload_B;
    sc_signal< sc_logic > M_AXIS_V_id_V_1_sel_rd;
    sc_signal< sc_logic > M_AXIS_V_id_V_1_sel_wr;
    sc_signal< sc_logic > M_AXIS_V_id_V_1_sel;
    sc_signal< sc_logic > M_AXIS_V_id_V_1_load_A;
    sc_signal< sc_logic > M_AXIS_V_id_V_1_load_B;
    sc_signal< sc_lv<2> > M_AXIS_V_id_V_1_state;
    sc_signal< sc_logic > M_AXIS_V_id_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > M_AXIS_V_dest_V_1_data_out;
    sc_signal< sc_logic > M_AXIS_V_dest_V_1_vld_in;
    sc_signal< sc_logic > M_AXIS_V_dest_V_1_vld_out;
    sc_signal< sc_logic > M_AXIS_V_dest_V_1_ack_in;
    sc_signal< sc_logic > M_AXIS_V_dest_V_1_ack_out;
    sc_signal< sc_lv<1> > M_AXIS_V_dest_V_1_payload_A;
    sc_signal< sc_lv<1> > M_AXIS_V_dest_V_1_payload_B;
    sc_signal< sc_logic > M_AXIS_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > M_AXIS_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > M_AXIS_V_dest_V_1_sel;
    sc_signal< sc_logic > M_AXIS_V_dest_V_1_load_A;
    sc_signal< sc_logic > M_AXIS_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > M_AXIS_V_dest_V_1_state;
    sc_signal< sc_logic > M_AXIS_V_dest_V_1_state_cmp_full;
    sc_signal< sc_logic > S_AXIS_TDATA_blk_n;
    sc_signal< sc_lv<22> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > M_AXIS_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<16> > indvarinc_fu_387_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<17> > i_2_fu_410_p2;
    sc_signal< sc_lv<17> > i_2_reg_629;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > indvarinc_i_fu_471_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > indvarinc3_i_fu_488_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > indvarinc6_i_fu_505_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > indvarinc9_i_fu_522_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<17> > i_3_fu_545_p2;
    sc_signal< sc_lv<17> > i_3_reg_669;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<1> > exitcond_fu_539_p2;
    sc_signal< sc_lv<1> > tmp_last_V_fu_562_p2;
    sc_signal< sc_lv<1> > tmp_last_V_reg_679;
    sc_signal< sc_lv<32> > tab_q0;
    sc_signal< sc_lv<16> > array2_address0;
    sc_signal< sc_logic > array2_ce0;
    sc_signal< sc_logic > array2_we0;
    sc_signal< sc_lv<32> > array2_q0;
    sc_signal< sc_lv<8> > count_1_address0;
    sc_signal< sc_logic > count_1_ce0;
    sc_signal< sc_logic > count_1_we0;
    sc_signal< sc_lv<32> > count_1_d0;
    sc_signal< sc_lv<32> > count_1_q0;
    sc_signal< sc_logic > count_1_ce1;
    sc_signal< sc_logic > count_1_we1;
    sc_signal< sc_lv<32> > count_1_q1;
    sc_signal< sc_lv<8> > count_2_address0;
    sc_signal< sc_logic > count_2_ce0;
    sc_signal< sc_logic > count_2_we0;
    sc_signal< sc_lv<32> > count_2_d0;
    sc_signal< sc_lv<32> > count_2_q0;
    sc_signal< sc_logic > count_2_ce1;
    sc_signal< sc_logic > count_2_we1;
    sc_signal< sc_lv<32> > count_2_q1;
    sc_signal< sc_lv<8> > count_3_address0;
    sc_signal< sc_logic > count_3_ce0;
    sc_signal< sc_logic > count_3_we0;
    sc_signal< sc_lv<32> > count_3_d0;
    sc_signal< sc_lv<32> > count_3_q0;
    sc_signal< sc_logic > count_3_ce1;
    sc_signal< sc_logic > count_3_we1;
    sc_signal< sc_lv<32> > count_3_q1;
    sc_signal< sc_lv<8> > count_4_address0;
    sc_signal< sc_logic > count_4_ce0;
    sc_signal< sc_logic > count_4_we0;
    sc_signal< sc_lv<32> > count_4_d0;
    sc_signal< sc_lv<32> > count_4_q0;
    sc_signal< sc_logic > count_4_ce1;
    sc_signal< sc_logic > count_4_we1;
    sc_signal< sc_lv<32> > count_4_q1;
    sc_signal< sc_lv<16> > tab_address0;
    sc_signal< sc_logic > tab_ce0;
    sc_signal< sc_logic > tab_we0;
    sc_signal< sc_lv<32> > tab_d0;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_ap_start;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_ap_done;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_ap_idle;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_ap_ready;
    sc_signal< sc_lv<16> > grp_count_occ_v2_fu_366_array_src_address0;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_array_src_ce0;
    sc_signal< sc_lv<8> > grp_count_occ_v2_fu_366_c1_address0;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c1_ce0;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c1_we0;
    sc_signal< sc_lv<32> > grp_count_occ_v2_fu_366_c1_d0;
    sc_signal< sc_lv<8> > grp_count_occ_v2_fu_366_c1_address1;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c1_ce1;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c1_we1;
    sc_signal< sc_lv<32> > grp_count_occ_v2_fu_366_c1_d1;
    sc_signal< sc_lv<8> > grp_count_occ_v2_fu_366_c2_address0;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c2_ce0;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c2_we0;
    sc_signal< sc_lv<32> > grp_count_occ_v2_fu_366_c2_d0;
    sc_signal< sc_lv<8> > grp_count_occ_v2_fu_366_c2_address1;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c2_ce1;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c2_we1;
    sc_signal< sc_lv<32> > grp_count_occ_v2_fu_366_c2_d1;
    sc_signal< sc_lv<8> > grp_count_occ_v2_fu_366_c3_address0;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c3_ce0;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c3_we0;
    sc_signal< sc_lv<32> > grp_count_occ_v2_fu_366_c3_d0;
    sc_signal< sc_lv<8> > grp_count_occ_v2_fu_366_c3_address1;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c3_ce1;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c3_we1;
    sc_signal< sc_lv<32> > grp_count_occ_v2_fu_366_c3_d1;
    sc_signal< sc_lv<8> > grp_count_occ_v2_fu_366_c4_address0;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c4_ce0;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c4_we0;
    sc_signal< sc_lv<32> > grp_count_occ_v2_fu_366_c4_d0;
    sc_signal< sc_lv<8> > grp_count_occ_v2_fu_366_c4_address1;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c4_ce1;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_c4_we1;
    sc_signal< sc_lv<32> > grp_count_occ_v2_fu_366_c4_d1;
    sc_signal< sc_logic > grp_sort_occ_v2_fu_375_ap_start;
    sc_signal< sc_logic > grp_sort_occ_v2_fu_375_ap_done;
    sc_signal< sc_logic > grp_sort_occ_v2_fu_375_ap_idle;
    sc_signal< sc_logic > grp_sort_occ_v2_fu_375_ap_ready;
    sc_signal< sc_lv<16> > grp_sort_occ_v2_fu_375_array_src_address0;
    sc_signal< sc_logic > grp_sort_occ_v2_fu_375_array_src_ce0;
    sc_signal< sc_lv<32> > grp_sort_occ_v2_fu_375_array_src_q0;
    sc_signal< sc_lv<16> > grp_sort_occ_v2_fu_375_array_dst_address0;
    sc_signal< sc_logic > grp_sort_occ_v2_fu_375_array_dst_ce0;
    sc_signal< sc_logic > grp_sort_occ_v2_fu_375_array_dst_we0;
    sc_signal< sc_lv<32> > grp_sort_occ_v2_fu_375_array_dst_d0;
    sc_signal< sc_lv<6> > grp_sort_occ_v2_fu_375_shift;
    sc_signal< sc_lv<8> > grp_sort_occ_v2_fu_375_count_address0;
    sc_signal< sc_logic > grp_sort_occ_v2_fu_375_count_ce0;
    sc_signal< sc_logic > grp_sort_occ_v2_fu_375_count_we0;
    sc_signal< sc_lv<32> > grp_sort_occ_v2_fu_375_count_d0;
    sc_signal< sc_lv<32> > grp_sort_occ_v2_fu_375_count_q0;
    sc_signal< sc_lv<16> > invdar_reg_277;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_s_fu_398_p2;
    sc_signal< sc_lv<17> > i_reg_288;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > invdar_i_reg_300;
    sc_signal< sc_lv<1> > tmp_i_16_fu_482_p2;
    sc_signal< sc_lv<1> > exitcond1_fu_404_p2;
    sc_signal< sc_lv<8> > invdar2_i_reg_311;
    sc_signal< sc_lv<1> > tmp_2_i_fu_499_p2;
    sc_signal< sc_lv<8> > invdar5_i_reg_322;
    sc_signal< sc_lv<1> > tmp_4_i_fu_516_p2;
    sc_signal< sc_lv<8> > invdar8_i_reg_333;
    sc_signal< sc_lv<1> > tmp_6_i_fu_533_p2;
    sc_signal< sc_lv<1> > val_4_reg_344;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<17> > i_1_reg_355;
    sc_signal< sc_logic > grp_count_occ_v2_fu_366_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > grp_sort_occ_v2_fu_375_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<64> > tmp_fu_393_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_441_p1;
    sc_signal< sc_lv<64> > tmp_i_fu_477_p1;
    sc_signal< sc_lv<64> > tmp_1_i_fu_494_p1;
    sc_signal< sc_lv<64> > tmp_3_i_fu_511_p1;
    sc_signal< sc_lv<64> > tmp_5_i_fu_528_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_551_p1;
    sc_signal< sc_lv<4> > tmp_keep_V_fu_134;
    sc_signal< sc_lv<4> > tmp_strb_V_fu_138;
    sc_signal< sc_lv<1> > tmp_user_V_fu_142;
    sc_signal< sc_lv<1> > tmp_id_V_fu_146;
    sc_signal< sc_lv<1> > tmp_dest_V_fu_150;
    sc_signal< sc_lv<1> > tmp_4_fu_556_p2;
    sc_signal< sc_lv<22> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<22> ap_ST_fsm_state1;
    static const sc_lv<22> ap_ST_fsm_state2;
    static const sc_lv<22> ap_ST_fsm_state3;
    static const sc_lv<22> ap_ST_fsm_state4;
    static const sc_lv<22> ap_ST_fsm_state5;
    static const sc_lv<22> ap_ST_fsm_state6;
    static const sc_lv<22> ap_ST_fsm_state7;
    static const sc_lv<22> ap_ST_fsm_state8;
    static const sc_lv<22> ap_ST_fsm_state9;
    static const sc_lv<22> ap_ST_fsm_state10;
    static const sc_lv<22> ap_ST_fsm_state11;
    static const sc_lv<22> ap_ST_fsm_state12;
    static const sc_lv<22> ap_ST_fsm_state13;
    static const sc_lv<22> ap_ST_fsm_state14;
    static const sc_lv<22> ap_ST_fsm_state15;
    static const sc_lv<22> ap_ST_fsm_state16;
    static const sc_lv<22> ap_ST_fsm_state17;
    static const sc_lv<22> ap_ST_fsm_state18;
    static const sc_lv<22> ap_ST_fsm_state19;
    static const sc_lv<22> ap_ST_fsm_state20;
    static const sc_lv<22> ap_ST_fsm_state21;
    static const sc_lv<22> ap_ST_fsm_state22;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<6> ap_const_lv6_8;
    static const sc_lv<6> ap_const_lv6_10;
    static const sc_lv<6> ap_const_lv6_18;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<16> ap_const_lv16_FFFF;
    static const sc_lv<17> ap_const_lv17_10000;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<17> ap_const_lv17_FFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_M_AXIS_TDATA();
    void thread_M_AXIS_TDATA_blk_n();
    void thread_M_AXIS_TDEST();
    void thread_M_AXIS_TID();
    void thread_M_AXIS_TKEEP();
    void thread_M_AXIS_TLAST();
    void thread_M_AXIS_TSTRB();
    void thread_M_AXIS_TUSER();
    void thread_M_AXIS_TVALID();
    void thread_M_AXIS_V_data_V_1_ack_in();
    void thread_M_AXIS_V_data_V_1_ack_out();
    void thread_M_AXIS_V_data_V_1_data_out();
    void thread_M_AXIS_V_data_V_1_load_A();
    void thread_M_AXIS_V_data_V_1_load_B();
    void thread_M_AXIS_V_data_V_1_sel();
    void thread_M_AXIS_V_data_V_1_state_cmp_full();
    void thread_M_AXIS_V_data_V_1_vld_in();
    void thread_M_AXIS_V_data_V_1_vld_out();
    void thread_M_AXIS_V_dest_V_1_ack_in();
    void thread_M_AXIS_V_dest_V_1_ack_out();
    void thread_M_AXIS_V_dest_V_1_data_out();
    void thread_M_AXIS_V_dest_V_1_load_A();
    void thread_M_AXIS_V_dest_V_1_load_B();
    void thread_M_AXIS_V_dest_V_1_sel();
    void thread_M_AXIS_V_dest_V_1_state_cmp_full();
    void thread_M_AXIS_V_dest_V_1_vld_in();
    void thread_M_AXIS_V_dest_V_1_vld_out();
    void thread_M_AXIS_V_id_V_1_ack_in();
    void thread_M_AXIS_V_id_V_1_ack_out();
    void thread_M_AXIS_V_id_V_1_data_out();
    void thread_M_AXIS_V_id_V_1_load_A();
    void thread_M_AXIS_V_id_V_1_load_B();
    void thread_M_AXIS_V_id_V_1_sel();
    void thread_M_AXIS_V_id_V_1_state_cmp_full();
    void thread_M_AXIS_V_id_V_1_vld_in();
    void thread_M_AXIS_V_id_V_1_vld_out();
    void thread_M_AXIS_V_keep_V_1_ack_in();
    void thread_M_AXIS_V_keep_V_1_ack_out();
    void thread_M_AXIS_V_keep_V_1_data_out();
    void thread_M_AXIS_V_keep_V_1_load_A();
    void thread_M_AXIS_V_keep_V_1_load_B();
    void thread_M_AXIS_V_keep_V_1_sel();
    void thread_M_AXIS_V_keep_V_1_state_cmp_full();
    void thread_M_AXIS_V_keep_V_1_vld_in();
    void thread_M_AXIS_V_keep_V_1_vld_out();
    void thread_M_AXIS_V_last_V_1_ack_in();
    void thread_M_AXIS_V_last_V_1_ack_out();
    void thread_M_AXIS_V_last_V_1_data_out();
    void thread_M_AXIS_V_last_V_1_load_A();
    void thread_M_AXIS_V_last_V_1_load_B();
    void thread_M_AXIS_V_last_V_1_sel();
    void thread_M_AXIS_V_last_V_1_state_cmp_full();
    void thread_M_AXIS_V_last_V_1_vld_in();
    void thread_M_AXIS_V_last_V_1_vld_out();
    void thread_M_AXIS_V_strb_V_1_ack_in();
    void thread_M_AXIS_V_strb_V_1_ack_out();
    void thread_M_AXIS_V_strb_V_1_data_out();
    void thread_M_AXIS_V_strb_V_1_load_A();
    void thread_M_AXIS_V_strb_V_1_load_B();
    void thread_M_AXIS_V_strb_V_1_sel();
    void thread_M_AXIS_V_strb_V_1_state_cmp_full();
    void thread_M_AXIS_V_strb_V_1_vld_in();
    void thread_M_AXIS_V_strb_V_1_vld_out();
    void thread_M_AXIS_V_user_V_1_ack_in();
    void thread_M_AXIS_V_user_V_1_ack_out();
    void thread_M_AXIS_V_user_V_1_data_out();
    void thread_M_AXIS_V_user_V_1_load_A();
    void thread_M_AXIS_V_user_V_1_load_B();
    void thread_M_AXIS_V_user_V_1_sel();
    void thread_M_AXIS_V_user_V_1_state_cmp_full();
    void thread_M_AXIS_V_user_V_1_vld_in();
    void thread_M_AXIS_V_user_V_1_vld_out();
    void thread_S_AXIS_TDATA_blk_n();
    void thread_S_AXIS_TREADY();
    void thread_S_AXIS_V_data_V_0_ack_in();
    void thread_S_AXIS_V_data_V_0_ack_out();
    void thread_S_AXIS_V_data_V_0_data_out();
    void thread_S_AXIS_V_data_V_0_load_A();
    void thread_S_AXIS_V_data_V_0_load_B();
    void thread_S_AXIS_V_data_V_0_sel();
    void thread_S_AXIS_V_data_V_0_state_cmp_full();
    void thread_S_AXIS_V_data_V_0_vld_in();
    void thread_S_AXIS_V_data_V_0_vld_out();
    void thread_S_AXIS_V_dest_V_0_ack_in();
    void thread_S_AXIS_V_dest_V_0_ack_out();
    void thread_S_AXIS_V_dest_V_0_data_out();
    void thread_S_AXIS_V_dest_V_0_load_A();
    void thread_S_AXIS_V_dest_V_0_load_B();
    void thread_S_AXIS_V_dest_V_0_sel();
    void thread_S_AXIS_V_dest_V_0_state_cmp_full();
    void thread_S_AXIS_V_dest_V_0_vld_in();
    void thread_S_AXIS_V_dest_V_0_vld_out();
    void thread_S_AXIS_V_id_V_0_ack_in();
    void thread_S_AXIS_V_id_V_0_ack_out();
    void thread_S_AXIS_V_id_V_0_data_out();
    void thread_S_AXIS_V_id_V_0_load_A();
    void thread_S_AXIS_V_id_V_0_load_B();
    void thread_S_AXIS_V_id_V_0_sel();
    void thread_S_AXIS_V_id_V_0_state_cmp_full();
    void thread_S_AXIS_V_id_V_0_vld_in();
    void thread_S_AXIS_V_id_V_0_vld_out();
    void thread_S_AXIS_V_keep_V_0_ack_in();
    void thread_S_AXIS_V_keep_V_0_ack_out();
    void thread_S_AXIS_V_keep_V_0_data_out();
    void thread_S_AXIS_V_keep_V_0_load_A();
    void thread_S_AXIS_V_keep_V_0_load_B();
    void thread_S_AXIS_V_keep_V_0_sel();
    void thread_S_AXIS_V_keep_V_0_state_cmp_full();
    void thread_S_AXIS_V_keep_V_0_vld_in();
    void thread_S_AXIS_V_keep_V_0_vld_out();
    void thread_S_AXIS_V_strb_V_0_ack_in();
    void thread_S_AXIS_V_strb_V_0_ack_out();
    void thread_S_AXIS_V_strb_V_0_data_out();
    void thread_S_AXIS_V_strb_V_0_load_A();
    void thread_S_AXIS_V_strb_V_0_load_B();
    void thread_S_AXIS_V_strb_V_0_sel();
    void thread_S_AXIS_V_strb_V_0_state_cmp_full();
    void thread_S_AXIS_V_strb_V_0_vld_in();
    void thread_S_AXIS_V_strb_V_0_vld_out();
    void thread_S_AXIS_V_user_V_0_ack_in();
    void thread_S_AXIS_V_user_V_0_ack_out();
    void thread_S_AXIS_V_user_V_0_data_out();
    void thread_S_AXIS_V_user_V_0_load_A();
    void thread_S_AXIS_V_user_V_0_load_B();
    void thread_S_AXIS_V_user_V_0_sel();
    void thread_S_AXIS_V_user_V_0_state_cmp_full();
    void thread_S_AXIS_V_user_V_0_vld_in();
    void thread_S_AXIS_V_user_V_0_vld_out();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_rst_n_inv();
    void thread_array2_address0();
    void thread_array2_ce0();
    void thread_array2_we0();
    void thread_count_1_address0();
    void thread_count_1_ce0();
    void thread_count_1_ce1();
    void thread_count_1_d0();
    void thread_count_1_we0();
    void thread_count_1_we1();
    void thread_count_2_address0();
    void thread_count_2_ce0();
    void thread_count_2_ce1();
    void thread_count_2_d0();
    void thread_count_2_we0();
    void thread_count_2_we1();
    void thread_count_3_address0();
    void thread_count_3_ce0();
    void thread_count_3_ce1();
    void thread_count_3_d0();
    void thread_count_3_we0();
    void thread_count_3_we1();
    void thread_count_4_address0();
    void thread_count_4_ce0();
    void thread_count_4_ce1();
    void thread_count_4_d0();
    void thread_count_4_we0();
    void thread_count_4_we1();
    void thread_exitcond1_fu_404_p2();
    void thread_exitcond_fu_539_p2();
    void thread_grp_count_occ_v2_fu_366_ap_start();
    void thread_grp_sort_occ_v2_fu_375_ap_start();
    void thread_grp_sort_occ_v2_fu_375_array_src_q0();
    void thread_grp_sort_occ_v2_fu_375_count_q0();
    void thread_grp_sort_occ_v2_fu_375_shift();
    void thread_i_2_fu_410_p2();
    void thread_i_3_fu_545_p2();
    void thread_indvarinc3_i_fu_488_p2();
    void thread_indvarinc6_i_fu_505_p2();
    void thread_indvarinc9_i_fu_522_p2();
    void thread_indvarinc_fu_387_p2();
    void thread_indvarinc_i_fu_471_p2();
    void thread_tab_address0();
    void thread_tab_ce0();
    void thread_tab_d0();
    void thread_tab_we0();
    void thread_tmp_1_i_fu_494_p1();
    void thread_tmp_2_fu_441_p1();
    void thread_tmp_2_i_fu_499_p2();
    void thread_tmp_3_fu_551_p1();
    void thread_tmp_3_i_fu_511_p1();
    void thread_tmp_4_fu_556_p2();
    void thread_tmp_4_i_fu_516_p2();
    void thread_tmp_5_i_fu_528_p1();
    void thread_tmp_6_i_fu_533_p2();
    void thread_tmp_fu_393_p1();
    void thread_tmp_i_16_fu_482_p2();
    void thread_tmp_i_fu_477_p1();
    void thread_tmp_last_V_fu_562_p2();
    void thread_tmp_s_fu_398_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
